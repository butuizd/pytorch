自动编码机的关键部分主要分为以下两大部分
1. 数据处理
  -数据预处理
   数据预处理这一块，要把数据压缩到-1~1之间，我认为起的作用是标准化，加快收敛速度。
  -输出转图片
   输出也要在-1~1之间输出，并且将张量转换成图片格式排列并保存，要注意单个值要在0~1之间
2. 训练模型
  - 收敛速度
   刚开始没有得到预期效果，后面对比标准代码并经过实验发现原因：模型的收敛速度慢，跑完了一次数据集仍没有明显现象。经过试验，可以在损失大小和学习率上调整，将损失函数内的size_average赋成false，即不求平均；也可以将学习率调大；也可以多跑几遍数据集(会有过拟合问题吗？)
   
此外还有一些不太清楚的地方：
1. save_image的使用
2. 输出随机正态分布张量，得到的数字全是0
  在标准代码上看到，在定义网络结构的时候，forward函数同时返回编码和解码的内容，这样用短的编码就能获得不同的结果
3. 使用CNN作为编码和解码器的主体时，使用optim.Adam才收敛地快，能在epoch_1时loss在十的数量级，有明显图样。猜测是学习率的自适应使得loss能很好地下降，而使用一般的SGD则震荡很大